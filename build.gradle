buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.legendary'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


ext {
    flywayVersion = '5.0.7'
    apacheCXFJaxRsVersion = '3.2.2'
    lombokVersion = '1.16.20'
}

dependencies {
    //Spring Boot Configuration
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")

    //Apache CFX Configuration
    compile("org.apache.cxf:cxf-spring-boot-starter-jaxrs:${apacheCXFJaxRsVersion}")
    compile("org.apache.cxf:cxf-rt-rs-service-description-swagger:${apacheCXFJaxRsVersion}")
    compile("org.apache.cxf:cxf-bundle-parent:${apacheCXFJaxRsVersion}")
    compile("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider")

    //compile("org.flywaydb:flyway-core:${flywayVersion}")
    compile("org.postgresql:postgresql")

    compileOnly("org.projectlombok:lombok:${lombokVersion}")

    runtime("com.h2database:h2")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}
